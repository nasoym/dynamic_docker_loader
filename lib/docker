#!/usr/bin/env bash

function docker_remove_all_containers() {
  docker_container_id="$(docker ps --all --filter label="dds" --format "{{.ID}}" || true)"
  echo "docker_container_id:${docker_container_id}"
  for container_id in $docker_container_id; do
    echo "remove container: ${container_id}"
    docker rm --force ${container_id}
  done
}

function docker_remove_old_containers() {
  # sudo lsof -n -iTCP@127.0.0.1:32836 -sTCP:ESTABLISHED
  :
}

function docker_update_all_containers() {
  images_to_update="$(max_time_diff=120 docker_list_outdated)"
  echo "images_to_update:$images_to_update"

  DOCKER_NAMESPACE="nasoym"
  for docker_repository in $images_to_update; do
    # what is with version
    echo "pull ${DOCKER_NAMESPACE}/$docker_repository"
    docker pull ${DOCKER_NAMESPACE}/$docker_repository
    docker_version="latest"
    docker_container_id="$(docker ps --filter status=running --filter label="${DOCKER_NAMESPACE}/${docker_repository}:${docker_version}" --filter label="dds" --format "{{.ID}}" || true)"
    echo "active docker_container_id based on repo image:${docker_container_id}"
    # what is with version
    if [[ -n "$docker_container_id" ]];then
      echo "relaunch container to have new version available"
      docker run --detach --publish-all --label "${DOCKER_NAMESPACE}/${docker_repository}:${docker_version}" --label="dds" ${DOCKER_NAMESPACE}/${docker_repository}:${docker_version} >&2 >/dev/null || true
    fi
  done


}

function docker_list_outdated() {
  dockerhub_list="$(curl --silent "https://hub.docker.com/v2/repositories/nasoym/?page=1&page_size=10000")"

  remote_dockers="$(echo "$dockerhub_list" \
    | jq -c '.results|map({name,last_updated})[]' \
    | jq -c '.last_updated=(.last_updated|gsub("\\.[0-9]*Z$";"")|strptime("%Y-%m-%dT%H:%M:%S")|mktime)'
  )"

  local_dockers="$(docker images --format "{{.Repository}}:{{.Tag}} {{.CreatedAt}}" nasoym/*\
    | sort  \
    | sed \
      -e 's/ CET$//g' \
      -e 's/ CEST$//g' \
      -e 's/ UTC$//g' \
      -e 's/^\([^ ]*\) \(.*\)$/echo "\1 $(date -d "\2" +%s)"/ge' \
    | awk '{a[$1]=$2} END { for(i in a){ print i, a[i]} }' \
    | sort \
    | awk -F ' |:' '{a[$1]=$3} END {for(i in a){print i,a[i]}}' \
    | jq -c -R '.|split(" ")|{name:.[0]|gsub("^nasoym\/";""),last_updated:.[1]|tonumber,type:"local"}'
  )"

  : ${max_time_diff:="120"}

  echo -en "${remote_dockers}\n${local_dockers}" \
    | jq -s 'group_by(.name)' \
    | jq 'map({name:.[0].name,local:(.[]|select(.type=="local").last_updated),remote:(.[]|select(has("type")|not).last_updated)})' \
    | jq 'map(.diff=(.remote-.local))' \
    | jq "map(select(.diff > ${max_time_diff}))" \
    | jq -r 'map(.name)[]'

}

